version: '3'
services:
  postgres:
    container_name: postgres
    image: "postgres:13"
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./etl/extraction/movies_dump.sql:/docker-entrypoint-initdb.d/movies_dump.sql
      - $HOME/postgresql/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d movies_database" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  elastic:
    container_name: elastic
    image: ghcr.io/yp-middle-python-24/elasticsearch:8.7.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f 'http://elastic:9200/_cat/health'" ]
      interval: 10s
      timeout: 30s
      retries: 2
    volumes:
      - $HOME/elasticsearch/data:/usr/share/elasticsearch/data
    depends_on:
      - postgres

  redis:
    container_name: redis
    image: redis:7
    env_file:
      - ./.env
    environment:
      - REDIS_PASSWORD=myredispassword
      - REDIS_USERNAME=myredisuser
    ports:
      - "6379:6379"

  fastapi:
    container_name: fastapi
    build: .
    env_file:
      - ./.env
    depends_on:
      - redis
      - elastic
    ports:
      - "8000:8000"

#  etl:
#    image: ghcr.io....
#    env_file:
#      - ./.env
#    depends_on:
#      - postgres
#      - elastic
